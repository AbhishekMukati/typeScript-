let firstName:string="dsf566"
let count:number = 0
let isLoading = true
let number
let undefi:undefined = undefined
let age:null|string=null
age = "age"


const user:{name:string,age:number,id:number}={
  name:"abhi",
  age: 25,
  id: 1
}

const user1={
  name:"abhi",
  age: 25,
  id: 1,
  firstName: ""
}


const frutes=["banana" , "apple"]
const num:number[] = [1,2,3,4,5,6,7,9,]
num.push(2)
// const users.{}



// functions

const sum=(a:number,b:number)=>{
  return a+b
}

sum(1,2)


const handleUserId=(payload:{userId:number},callback:(a:number, b:number) =>void) => {

}

// handleUserId((userIs:1).sum)

interface Person {
  department:string
}

interface User extends Person{

  name:string,
  id:number,
  getUser:()=>void

}


let data:User={
  name:"csdf",
  id:1545,
  getUser:()=>{
  },
  department:"sdfjosj"
}


type Data={

}

type employee={
  id:number,
  name:string
}
type manger={
  department:string
} &employee


let employeewithmanger:manger={
  department:"A",
  id:2,
  name:"ddsu"

}

